//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Moldtrax.Dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DefectCostAnalysisDataset")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DefectCostAnalysisDataset : global::System.Data.DataSet {
        
        private procDefectCostAnalysisrptDataTable tableprocDefectCostAnalysisrpt;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public DefectCostAnalysisDataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected DefectCostAnalysisDataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["procDefectCostAnalysisrpt"] != null)) {
                    base.Tables.Add(new procDefectCostAnalysisrptDataTable(ds.Tables["procDefectCostAnalysisrpt"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public procDefectCostAnalysisrptDataTable procDefectCostAnalysisrpt {
            get {
                return this.tableprocDefectCostAnalysisrpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DefectCostAnalysisDataset cln = ((DefectCostAnalysisDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["procDefectCostAnalysisrpt"] != null)) {
                    base.Tables.Add(new procDefectCostAnalysisrptDataTable(ds.Tables["procDefectCostAnalysisrpt"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableprocDefectCostAnalysisrpt = ((procDefectCostAnalysisrptDataTable)(base.Tables["procDefectCostAnalysisrpt"]));
            if ((initTable == true)) {
                if ((this.tableprocDefectCostAnalysisrpt != null)) {
                    this.tableprocDefectCostAnalysisrpt.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DefectCostAnalysisDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DefectCostAnalysisDataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableprocDefectCostAnalysisrpt = new procDefectCostAnalysisrptDataTable();
            base.Tables.Add(this.tableprocDefectCostAnalysisrpt);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeprocDefectCostAnalysisrpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DefectCostAnalysisDataset ds = new DefectCostAnalysisDataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void procDefectCostAnalysisrptRowChangeEventHandler(object sender, procDefectCostAnalysisrptRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class procDefectCostAnalysisrptDataTable : global::System.Data.TypedTableBase<procDefectCostAnalysisrptRow> {
            
            private global::System.Data.DataColumn columnSetDate;
            
            private global::System.Data.DataColumn columnMoldDataID;
            
            private global::System.Data.DataColumn columnSetTime;
            
            private global::System.Data.DataColumn columnMoldName;
            
            private global::System.Data.DataColumn columnMoldDesc;
            
            private global::System.Data.DataColumn columnSetPressNumb;
            
            private global::System.Data.DataColumn columnDfctID;
            
            private global::System.Data.DataColumn columnTSDefects;
            
            private global::System.Data.DataColumn columnDfctCavNum;
            
            private global::System.Data.DataColumn columnDfctDescript;
            
            private global::System.Data.DataColumn columnProductLine;
            
            private global::System.Data.DataColumn columnProductPart;
            
            private global::System.Data.DataColumn columnDfctDate;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnDfctNotes;
            
            private global::System.Data.DataColumn columnMldPullDate;
            
            private global::System.Data.DataColumn columnMldPullTime;
            
            private global::System.Data.DataColumn columnCavityLocationNumber;
            
            private global::System.Data.DataColumn columnDfctTime;
            
            private global::System.Data.DataColumn columnCavityNumber;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnCompanyCNBlockedDefects;
            
            private global::System.Data.DataColumn columnSetTech;
            
            private global::System.Data.DataColumn columnTSDefects1;
            
            private global::System.Data.DataColumn columnTlCorrectiveAction;
            
            private global::System.Data.DataColumn columnTlTechnician;
            
            private global::System.Data.DataColumn columnTlQuantity;
            
            private global::System.Data.DataColumn columnCaTech;
            
            private global::System.Data.DataColumn columnDftcEstTime;
            
            private global::System.Data.DataColumn columnLineTotal;
            
            private global::System.Data.DataColumn columnTimeCost;
            
            private global::System.Data.DataColumn columnSubTotalCost;
            
            private global::System.Data.DataColumn columnCompanyCNRepairCosts;
            
            private global::System.Data.DataColumn columnMoldToolDescrip;
            
            private global::System.Data.DataColumn columnMoldToolingPartNumber;
            
            private global::System.Data.DataColumn columnMoldToolCost;
            
            private global::System.Data.DataColumn columnTlReplID;
            
            private global::System.Data.DataColumn columnMoldConfig;
            
            private global::System.Data.DataColumn columnMoldConfig2;
            
            private global::System.Data.DataColumn columnTIRepairTime;
            
            private global::System.Data.DataColumn columnMTXTotalTimeCal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public procDefectCostAnalysisrptDataTable() {
                this.TableName = "procDefectCostAnalysisrpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal procDefectCostAnalysisrptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected procDefectCostAnalysisrptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SetDateColumn {
                get {
                    return this.columnSetDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MoldDataIDColumn {
                get {
                    return this.columnMoldDataID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SetTimeColumn {
                get {
                    return this.columnSetTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MoldNameColumn {
                get {
                    return this.columnMoldName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MoldDescColumn {
                get {
                    return this.columnMoldDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SetPressNumbColumn {
                get {
                    return this.columnSetPressNumb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DfctIDColumn {
                get {
                    return this.columnDfctID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TSDefectsColumn {
                get {
                    return this.columnTSDefects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DfctCavNumColumn {
                get {
                    return this.columnDfctCavNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DfctDescriptColumn {
                get {
                    return this.columnDfctDescript;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProductLineColumn {
                get {
                    return this.columnProductLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProductPartColumn {
                get {
                    return this.columnProductPart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DfctDateColumn {
                get {
                    return this.columnDfctDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DfctNotesColumn {
                get {
                    return this.columnDfctNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MldPullDateColumn {
                get {
                    return this.columnMldPullDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MldPullTimeColumn {
                get {
                    return this.columnMldPullTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CavityLocationNumberColumn {
                get {
                    return this.columnCavityLocationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DfctTimeColumn {
                get {
                    return this.columnDfctTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CavityNumberColumn {
                get {
                    return this.columnCavityNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CompanyCNBlockedDefectsColumn {
                get {
                    return this.columnCompanyCNBlockedDefects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SetTechColumn {
                get {
                    return this.columnSetTech;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TSDefects1Column {
                get {
                    return this.columnTSDefects1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TlCorrectiveActionColumn {
                get {
                    return this.columnTlCorrectiveAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TlTechnicianColumn {
                get {
                    return this.columnTlTechnician;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TlQuantityColumn {
                get {
                    return this.columnTlQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CaTechColumn {
                get {
                    return this.columnCaTech;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DftcEstTimeColumn {
                get {
                    return this.columnDftcEstTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LineTotalColumn {
                get {
                    return this.columnLineTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TimeCostColumn {
                get {
                    return this.columnTimeCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubTotalCostColumn {
                get {
                    return this.columnSubTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CompanyCNRepairCostsColumn {
                get {
                    return this.columnCompanyCNRepairCosts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MoldToolDescripColumn {
                get {
                    return this.columnMoldToolDescrip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MoldToolingPartNumberColumn {
                get {
                    return this.columnMoldToolingPartNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MoldToolCostColumn {
                get {
                    return this.columnMoldToolCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TlReplIDColumn {
                get {
                    return this.columnTlReplID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MoldConfigColumn {
                get {
                    return this.columnMoldConfig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MoldConfig2Column {
                get {
                    return this.columnMoldConfig2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TIRepairTimeColumn {
                get {
                    return this.columnTIRepairTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MTXTotalTimeCalColumn {
                get {
                    return this.columnMTXTotalTimeCal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public procDefectCostAnalysisrptRow this[int index] {
                get {
                    return ((procDefectCostAnalysisrptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event procDefectCostAnalysisrptRowChangeEventHandler procDefectCostAnalysisrptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event procDefectCostAnalysisrptRowChangeEventHandler procDefectCostAnalysisrptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event procDefectCostAnalysisrptRowChangeEventHandler procDefectCostAnalysisrptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event procDefectCostAnalysisrptRowChangeEventHandler procDefectCostAnalysisrptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddprocDefectCostAnalysisrptRow(procDefectCostAnalysisrptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public procDefectCostAnalysisrptRow AddprocDefectCostAnalysisrptRow(
                        System.DateTime SetDate, 
                        System.DateTime SetTime, 
                        string MoldName, 
                        string MoldDesc, 
                        string SetPressNumb, 
                        string DfctID, 
                        string TSDefects, 
                        int DfctCavNum, 
                        string DfctDescript, 
                        string ProductLine, 
                        string ProductPart, 
                        System.DateTime DfctDate, 
                        string EmployeeID, 
                        string DfctNotes, 
                        System.DateTime MldPullDate, 
                        System.DateTime MldPullTime, 
                        string CavityLocationNumber, 
                        System.DateTime DfctTime, 
                        string CavityNumber, 
                        string CompanyName, 
                        string CompanyCNBlockedDefects, 
                        string SetTech, 
                        string TSDefects1, 
                        string TlCorrectiveAction, 
                        int TlTechnician, 
                        int TlQuantity, 
                        string CaTech, 
                        double DftcEstTime, 
                        double LineTotal, 
                        double TimeCost, 
                        double SubTotalCost, 
                        string CompanyCNRepairCosts, 
                        string MoldToolDescrip, 
                        string MoldToolingPartNumber, 
                        decimal MoldToolCost, 
                        string MoldConfig, 
                        string MoldConfig2, 
                        double TIRepairTime, 
                        string MTXTotalTimeCal) {
                procDefectCostAnalysisrptRow rowprocDefectCostAnalysisrptRow = ((procDefectCostAnalysisrptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SetDate,
                        null,
                        SetTime,
                        MoldName,
                        MoldDesc,
                        SetPressNumb,
                        DfctID,
                        TSDefects,
                        DfctCavNum,
                        DfctDescript,
                        ProductLine,
                        ProductPart,
                        DfctDate,
                        EmployeeID,
                        DfctNotes,
                        MldPullDate,
                        MldPullTime,
                        CavityLocationNumber,
                        DfctTime,
                        CavityNumber,
                        CompanyName,
                        CompanyCNBlockedDefects,
                        SetTech,
                        TSDefects1,
                        TlCorrectiveAction,
                        TlTechnician,
                        TlQuantity,
                        CaTech,
                        DftcEstTime,
                        LineTotal,
                        TimeCost,
                        SubTotalCost,
                        CompanyCNRepairCosts,
                        MoldToolDescrip,
                        MoldToolingPartNumber,
                        MoldToolCost,
                        null,
                        MoldConfig,
                        MoldConfig2,
                        TIRepairTime,
                        MTXTotalTimeCal};
                rowprocDefectCostAnalysisrptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowprocDefectCostAnalysisrptRow);
                return rowprocDefectCostAnalysisrptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                procDefectCostAnalysisrptDataTable cln = ((procDefectCostAnalysisrptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new procDefectCostAnalysisrptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnSetDate = base.Columns["SetDate"];
                this.columnMoldDataID = base.Columns["MoldDataID"];
                this.columnSetTime = base.Columns["SetTime"];
                this.columnMoldName = base.Columns["MoldName"];
                this.columnMoldDesc = base.Columns["MoldDesc"];
                this.columnSetPressNumb = base.Columns["SetPressNumb"];
                this.columnDfctID = base.Columns["DfctID"];
                this.columnTSDefects = base.Columns["TSDefects"];
                this.columnDfctCavNum = base.Columns["DfctCavNum"];
                this.columnDfctDescript = base.Columns["DfctDescript"];
                this.columnProductLine = base.Columns["ProductLine"];
                this.columnProductPart = base.Columns["ProductPart"];
                this.columnDfctDate = base.Columns["DfctDate"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnDfctNotes = base.Columns["DfctNotes"];
                this.columnMldPullDate = base.Columns["MldPullDate"];
                this.columnMldPullTime = base.Columns["MldPullTime"];
                this.columnCavityLocationNumber = base.Columns["CavityLocationNumber"];
                this.columnDfctTime = base.Columns["DfctTime"];
                this.columnCavityNumber = base.Columns["CavityNumber"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnCompanyCNBlockedDefects = base.Columns["CompanyCNBlockedDefects"];
                this.columnSetTech = base.Columns["SetTech"];
                this.columnTSDefects1 = base.Columns["TSDefects1"];
                this.columnTlCorrectiveAction = base.Columns["TlCorrectiveAction"];
                this.columnTlTechnician = base.Columns["TlTechnician"];
                this.columnTlQuantity = base.Columns["TlQuantity"];
                this.columnCaTech = base.Columns["CaTech"];
                this.columnDftcEstTime = base.Columns["DftcEstTime"];
                this.columnLineTotal = base.Columns["LineTotal"];
                this.columnTimeCost = base.Columns["TimeCost"];
                this.columnSubTotalCost = base.Columns["SubTotalCost"];
                this.columnCompanyCNRepairCosts = base.Columns["CompanyCNRepairCosts"];
                this.columnMoldToolDescrip = base.Columns["MoldToolDescrip"];
                this.columnMoldToolingPartNumber = base.Columns["MoldToolingPartNumber"];
                this.columnMoldToolCost = base.Columns["MoldToolCost"];
                this.columnTlReplID = base.Columns["TlReplID"];
                this.columnMoldConfig = base.Columns["MoldConfig"];
                this.columnMoldConfig2 = base.Columns["MoldConfig2"];
                this.columnTIRepairTime = base.Columns["TIRepairTime"];
                this.columnMTXTotalTimeCal = base.Columns["MTXTotalTimeCal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnSetDate = new global::System.Data.DataColumn("SetDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetDate);
                this.columnMoldDataID = new global::System.Data.DataColumn("MoldDataID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldDataID);
                this.columnSetTime = new global::System.Data.DataColumn("SetTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetTime);
                this.columnMoldName = new global::System.Data.DataColumn("MoldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldName);
                this.columnMoldDesc = new global::System.Data.DataColumn("MoldDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldDesc);
                this.columnSetPressNumb = new global::System.Data.DataColumn("SetPressNumb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetPressNumb);
                this.columnDfctID = new global::System.Data.DataColumn("DfctID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDfctID);
                this.columnTSDefects = new global::System.Data.DataColumn("TSDefects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTSDefects);
                this.columnDfctCavNum = new global::System.Data.DataColumn("DfctCavNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDfctCavNum);
                this.columnDfctDescript = new global::System.Data.DataColumn("DfctDescript", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDfctDescript);
                this.columnProductLine = new global::System.Data.DataColumn("ProductLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductLine);
                this.columnProductPart = new global::System.Data.DataColumn("ProductPart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductPart);
                this.columnDfctDate = new global::System.Data.DataColumn("DfctDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDfctDate);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnDfctNotes = new global::System.Data.DataColumn("DfctNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDfctNotes);
                this.columnMldPullDate = new global::System.Data.DataColumn("MldPullDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMldPullDate);
                this.columnMldPullTime = new global::System.Data.DataColumn("MldPullTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMldPullTime);
                this.columnCavityLocationNumber = new global::System.Data.DataColumn("CavityLocationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCavityLocationNumber);
                this.columnDfctTime = new global::System.Data.DataColumn("DfctTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDfctTime);
                this.columnCavityNumber = new global::System.Data.DataColumn("CavityNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCavityNumber);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnCompanyCNBlockedDefects = new global::System.Data.DataColumn("CompanyCNBlockedDefects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCNBlockedDefects);
                this.columnSetTech = new global::System.Data.DataColumn("SetTech", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetTech);
                this.columnTSDefects1 = new global::System.Data.DataColumn("TSDefects1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTSDefects1);
                this.columnTlCorrectiveAction = new global::System.Data.DataColumn("TlCorrectiveAction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlCorrectiveAction);
                this.columnTlTechnician = new global::System.Data.DataColumn("TlTechnician", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlTechnician);
                this.columnTlQuantity = new global::System.Data.DataColumn("TlQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlQuantity);
                this.columnCaTech = new global::System.Data.DataColumn("CaTech", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaTech);
                this.columnDftcEstTime = new global::System.Data.DataColumn("DftcEstTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDftcEstTime);
                this.columnLineTotal = new global::System.Data.DataColumn("LineTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLineTotal);
                this.columnTimeCost = new global::System.Data.DataColumn("TimeCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeCost);
                this.columnSubTotalCost = new global::System.Data.DataColumn("SubTotalCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotalCost);
                this.columnCompanyCNRepairCosts = new global::System.Data.DataColumn("CompanyCNRepairCosts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCNRepairCosts);
                this.columnMoldToolDescrip = new global::System.Data.DataColumn("MoldToolDescrip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldToolDescrip);
                this.columnMoldToolingPartNumber = new global::System.Data.DataColumn("MoldToolingPartNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldToolingPartNumber);
                this.columnMoldToolCost = new global::System.Data.DataColumn("MoldToolCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldToolCost);
                this.columnTlReplID = new global::System.Data.DataColumn("TlReplID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTlReplID);
                this.columnMoldConfig = new global::System.Data.DataColumn("MoldConfig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldConfig);
                this.columnMoldConfig2 = new global::System.Data.DataColumn("MoldConfig2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldConfig2);
                this.columnTIRepairTime = new global::System.Data.DataColumn("TIRepairTime", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIRepairTime);
                this.columnMTXTotalTimeCal = new global::System.Data.DataColumn("MTXTotalTimeCal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTXTotalTimeCal);
                this.columnMoldDataID.AutoIncrement = true;
                this.columnMoldDataID.ReadOnly = true;
                this.columnMoldName.MaxLength = 50;
                this.columnMoldDesc.MaxLength = 50;
                this.columnSetPressNumb.MaxLength = 8;
                this.columnDfctID.MaxLength = 255;
                this.columnTSDefects.MaxLength = 255;
                this.columnDfctDescript.MaxLength = 255;
                this.columnProductLine.MaxLength = 50;
                this.columnProductPart.MaxLength = 50;
                this.columnEmployeeID.ReadOnly = true;
                this.columnEmployeeID.MaxLength = 101;
                this.columnDfctNotes.MaxLength = 2147483647;
                this.columnCavityLocationNumber.MaxLength = 50;
                this.columnCavityNumber.MaxLength = 50;
                this.columnCompanyName.MaxLength = 50;
                this.columnCompanyCNBlockedDefects.MaxLength = 50;
                this.columnSetTech.ReadOnly = true;
                this.columnSetTech.MaxLength = 101;
                this.columnTSDefects1.MaxLength = 255;
                this.columnTlCorrectiveAction.MaxLength = 150;
                this.columnCaTech.ReadOnly = true;
                this.columnCaTech.MaxLength = 102;
                this.columnLineTotal.ReadOnly = true;
                this.columnTimeCost.ReadOnly = true;
                this.columnSubTotalCost.ReadOnly = true;
                this.columnCompanyCNRepairCosts.MaxLength = 50;
                this.columnMoldToolDescrip.MaxLength = 255;
                this.columnMoldToolingPartNumber.MaxLength = 250;
                this.columnTlReplID.AutoIncrement = true;
                this.columnTlReplID.ReadOnly = true;
                this.columnMoldConfig.MaxLength = 50;
                this.columnMoldConfig2.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public procDefectCostAnalysisrptRow NewprocDefectCostAnalysisrptRow() {
                return ((procDefectCostAnalysisrptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new procDefectCostAnalysisrptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(procDefectCostAnalysisrptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.procDefectCostAnalysisrptRowChanged != null)) {
                    this.procDefectCostAnalysisrptRowChanged(this, new procDefectCostAnalysisrptRowChangeEvent(((procDefectCostAnalysisrptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.procDefectCostAnalysisrptRowChanging != null)) {
                    this.procDefectCostAnalysisrptRowChanging(this, new procDefectCostAnalysisrptRowChangeEvent(((procDefectCostAnalysisrptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.procDefectCostAnalysisrptRowDeleted != null)) {
                    this.procDefectCostAnalysisrptRowDeleted(this, new procDefectCostAnalysisrptRowChangeEvent(((procDefectCostAnalysisrptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.procDefectCostAnalysisrptRowDeleting != null)) {
                    this.procDefectCostAnalysisrptRowDeleting(this, new procDefectCostAnalysisrptRowChangeEvent(((procDefectCostAnalysisrptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveprocDefectCostAnalysisrptRow(procDefectCostAnalysisrptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DefectCostAnalysisDataset ds = new DefectCostAnalysisDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "procDefectCostAnalysisrptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class procDefectCostAnalysisrptRow : global::System.Data.DataRow {
            
            private procDefectCostAnalysisrptDataTable tableprocDefectCostAnalysisrpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal procDefectCostAnalysisrptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableprocDefectCostAnalysisrpt = ((procDefectCostAnalysisrptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime SetDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableprocDefectCostAnalysisrpt.SetDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetDate\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.SetDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int MoldDataID {
                get {
                    try {
                        return ((int)(this[this.tableprocDefectCostAnalysisrpt.MoldDataIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldDataID\' in table \'procDefectCostAnalysisrpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MoldDataIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime SetTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableprocDefectCostAnalysisrpt.SetTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetTime\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.SetTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MoldName {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.MoldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldName\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MoldNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MoldDesc {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.MoldDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldDesc\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MoldDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SetPressNumb {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.SetPressNumbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetPressNumb\' in table \'procDefectCostAnalysisrpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.SetPressNumbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DfctID {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.DfctIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DfctID\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.DfctIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TSDefects {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.TSDefectsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TSDefects\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.TSDefectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DfctCavNum {
                get {
                    try {
                        return ((int)(this[this.tableprocDefectCostAnalysisrpt.DfctCavNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DfctCavNum\' in table \'procDefectCostAnalysisrpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.DfctCavNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DfctDescript {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.DfctDescriptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DfctDescript\' in table \'procDefectCostAnalysisrpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.DfctDescriptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProductLine {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.ProductLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductLine\' in table \'procDefectCostAnalysisrpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.ProductLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProductPart {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.ProductPartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductPart\' in table \'procDefectCostAnalysisrpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.ProductPartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DfctDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableprocDefectCostAnalysisrpt.DfctDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DfctDate\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.DfctDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EmployeeID {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.EmployeeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeID\' in table \'procDefectCostAnalysisrpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DfctNotes {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.DfctNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DfctNotes\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.DfctNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime MldPullDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableprocDefectCostAnalysisrpt.MldPullDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MldPullDate\' in table \'procDefectCostAnalysisrpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MldPullDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime MldPullTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableprocDefectCostAnalysisrpt.MldPullTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MldPullTime\' in table \'procDefectCostAnalysisrpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MldPullTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CavityLocationNumber {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.CavityLocationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CavityLocationNumber\' in table \'procDefectCostAnalysisrpt\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.CavityLocationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DfctTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableprocDefectCostAnalysisrpt.DfctTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DfctTime\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.DfctTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CavityNumber {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.CavityNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CavityNumber\' in table \'procDefectCostAnalysisrpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.CavityNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'procDefectCostAnalysisrpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CompanyCNBlockedDefects {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.CompanyCNBlockedDefectsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCNBlockedDefects\' in table \'procDefectCostAnalysisrp" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.CompanyCNBlockedDefectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SetTech {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.SetTechColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetTech\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.SetTechColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TSDefects1 {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.TSDefects1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TSDefects1\' in table \'procDefectCostAnalysisrpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.TSDefects1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TlCorrectiveAction {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.TlCorrectiveActionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TlCorrectiveAction\' in table \'procDefectCostAnalysisrpt\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.TlCorrectiveActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TlTechnician {
                get {
                    try {
                        return ((int)(this[this.tableprocDefectCostAnalysisrpt.TlTechnicianColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TlTechnician\' in table \'procDefectCostAnalysisrpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.TlTechnicianColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TlQuantity {
                get {
                    try {
                        return ((int)(this[this.tableprocDefectCostAnalysisrpt.TlQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TlQuantity\' in table \'procDefectCostAnalysisrpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.TlQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CaTech {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.CaTechColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CaTech\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.CaTechColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DftcEstTime {
                get {
                    try {
                        return ((double)(this[this.tableprocDefectCostAnalysisrpt.DftcEstTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DftcEstTime\' in table \'procDefectCostAnalysisrpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.DftcEstTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double LineTotal {
                get {
                    try {
                        return ((double)(this[this.tableprocDefectCostAnalysisrpt.LineTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LineTotal\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.LineTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double TimeCost {
                get {
                    try {
                        return ((double)(this[this.tableprocDefectCostAnalysisrpt.TimeCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimeCost\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.TimeCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double SubTotalCost {
                get {
                    try {
                        return ((double)(this[this.tableprocDefectCostAnalysisrpt.SubTotalCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotalCost\' in table \'procDefectCostAnalysisrpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.SubTotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CompanyCNRepairCosts {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.CompanyCNRepairCostsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCNRepairCosts\' in table \'procDefectCostAnalysisrpt\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.CompanyCNRepairCostsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MoldToolDescrip {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.MoldToolDescripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldToolDescrip\' in table \'procDefectCostAnalysisrpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MoldToolDescripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MoldToolingPartNumber {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.MoldToolingPartNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldToolingPartNumber\' in table \'procDefectCostAnalysisrpt\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MoldToolingPartNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal MoldToolCost {
                get {
                    try {
                        return ((decimal)(this[this.tableprocDefectCostAnalysisrpt.MoldToolCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldToolCost\' in table \'procDefectCostAnalysisrpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MoldToolCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TlReplID {
                get {
                    try {
                        return ((int)(this[this.tableprocDefectCostAnalysisrpt.TlReplIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TlReplID\' in table \'procDefectCostAnalysisrpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.TlReplIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MoldConfig {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.MoldConfigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldConfig\' in table \'procDefectCostAnalysisrpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MoldConfigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MoldConfig2 {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.MoldConfig2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldConfig2\' in table \'procDefectCostAnalysisrpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MoldConfig2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double TIRepairTime {
                get {
                    try {
                        return ((double)(this[this.tableprocDefectCostAnalysisrpt.TIRepairTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIRepairTime\' in table \'procDefectCostAnalysisrpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.TIRepairTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MTXTotalTimeCal {
                get {
                    try {
                        return ((string)(this[this.tableprocDefectCostAnalysisrpt.MTXTotalTimeCalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTXTotalTimeCal\' in table \'procDefectCostAnalysisrpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableprocDefectCostAnalysisrpt.MTXTotalTimeCalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSetDateNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.SetDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSetDateNull() {
                this[this.tableprocDefectCostAnalysisrpt.SetDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMoldDataIDNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MoldDataIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMoldDataIDNull() {
                this[this.tableprocDefectCostAnalysisrpt.MoldDataIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSetTimeNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.SetTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSetTimeNull() {
                this[this.tableprocDefectCostAnalysisrpt.SetTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMoldNameNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MoldNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMoldNameNull() {
                this[this.tableprocDefectCostAnalysisrpt.MoldNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMoldDescNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MoldDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMoldDescNull() {
                this[this.tableprocDefectCostAnalysisrpt.MoldDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSetPressNumbNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.SetPressNumbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSetPressNumbNull() {
                this[this.tableprocDefectCostAnalysisrpt.SetPressNumbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDfctIDNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.DfctIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDfctIDNull() {
                this[this.tableprocDefectCostAnalysisrpt.DfctIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTSDefectsNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.TSDefectsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTSDefectsNull() {
                this[this.tableprocDefectCostAnalysisrpt.TSDefectsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDfctCavNumNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.DfctCavNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDfctCavNumNull() {
                this[this.tableprocDefectCostAnalysisrpt.DfctCavNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDfctDescriptNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.DfctDescriptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDfctDescriptNull() {
                this[this.tableprocDefectCostAnalysisrpt.DfctDescriptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProductLineNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.ProductLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProductLineNull() {
                this[this.tableprocDefectCostAnalysisrpt.ProductLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProductPartNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.ProductPartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProductPartNull() {
                this[this.tableprocDefectCostAnalysisrpt.ProductPartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDfctDateNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.DfctDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDfctDateNull() {
                this[this.tableprocDefectCostAnalysisrpt.DfctDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEmployeeIDNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.EmployeeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEmployeeIDNull() {
                this[this.tableprocDefectCostAnalysisrpt.EmployeeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDfctNotesNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.DfctNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDfctNotesNull() {
                this[this.tableprocDefectCostAnalysisrpt.DfctNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMldPullDateNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MldPullDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMldPullDateNull() {
                this[this.tableprocDefectCostAnalysisrpt.MldPullDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMldPullTimeNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MldPullTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMldPullTimeNull() {
                this[this.tableprocDefectCostAnalysisrpt.MldPullTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCavityLocationNumberNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.CavityLocationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCavityLocationNumberNull() {
                this[this.tableprocDefectCostAnalysisrpt.CavityLocationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDfctTimeNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.DfctTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDfctTimeNull() {
                this[this.tableprocDefectCostAnalysisrpt.DfctTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCavityNumberNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.CavityNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCavityNumberNull() {
                this[this.tableprocDefectCostAnalysisrpt.CavityNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCompanyNameNull() {
                this[this.tableprocDefectCostAnalysisrpt.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCompanyCNBlockedDefectsNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.CompanyCNBlockedDefectsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCompanyCNBlockedDefectsNull() {
                this[this.tableprocDefectCostAnalysisrpt.CompanyCNBlockedDefectsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSetTechNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.SetTechColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSetTechNull() {
                this[this.tableprocDefectCostAnalysisrpt.SetTechColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTSDefects1Null() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.TSDefects1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTSDefects1Null() {
                this[this.tableprocDefectCostAnalysisrpt.TSDefects1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTlCorrectiveActionNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.TlCorrectiveActionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTlCorrectiveActionNull() {
                this[this.tableprocDefectCostAnalysisrpt.TlCorrectiveActionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTlTechnicianNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.TlTechnicianColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTlTechnicianNull() {
                this[this.tableprocDefectCostAnalysisrpt.TlTechnicianColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTlQuantityNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.TlQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTlQuantityNull() {
                this[this.tableprocDefectCostAnalysisrpt.TlQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCaTechNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.CaTechColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCaTechNull() {
                this[this.tableprocDefectCostAnalysisrpt.CaTechColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDftcEstTimeNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.DftcEstTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDftcEstTimeNull() {
                this[this.tableprocDefectCostAnalysisrpt.DftcEstTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLineTotalNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.LineTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLineTotalNull() {
                this[this.tableprocDefectCostAnalysisrpt.LineTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTimeCostNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.TimeCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTimeCostNull() {
                this[this.tableprocDefectCostAnalysisrpt.TimeCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubTotalCostNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.SubTotalCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubTotalCostNull() {
                this[this.tableprocDefectCostAnalysisrpt.SubTotalCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCompanyCNRepairCostsNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.CompanyCNRepairCostsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCompanyCNRepairCostsNull() {
                this[this.tableprocDefectCostAnalysisrpt.CompanyCNRepairCostsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMoldToolDescripNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MoldToolDescripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMoldToolDescripNull() {
                this[this.tableprocDefectCostAnalysisrpt.MoldToolDescripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMoldToolingPartNumberNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MoldToolingPartNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMoldToolingPartNumberNull() {
                this[this.tableprocDefectCostAnalysisrpt.MoldToolingPartNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMoldToolCostNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MoldToolCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMoldToolCostNull() {
                this[this.tableprocDefectCostAnalysisrpt.MoldToolCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTlReplIDNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.TlReplIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTlReplIDNull() {
                this[this.tableprocDefectCostAnalysisrpt.TlReplIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMoldConfigNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MoldConfigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMoldConfigNull() {
                this[this.tableprocDefectCostAnalysisrpt.MoldConfigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMoldConfig2Null() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MoldConfig2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMoldConfig2Null() {
                this[this.tableprocDefectCostAnalysisrpt.MoldConfig2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTIRepairTimeNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.TIRepairTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTIRepairTimeNull() {
                this[this.tableprocDefectCostAnalysisrpt.TIRepairTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMTXTotalTimeCalNull() {
                return this.IsNull(this.tableprocDefectCostAnalysisrpt.MTXTotalTimeCalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMTXTotalTimeCalNull() {
                this[this.tableprocDefectCostAnalysisrpt.MTXTotalTimeCalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class procDefectCostAnalysisrptRowChangeEvent : global::System.EventArgs {
            
            private procDefectCostAnalysisrptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public procDefectCostAnalysisrptRowChangeEvent(procDefectCostAnalysisrptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public procDefectCostAnalysisrptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Moldtrax.Dataset.DefectCostAnalysisDatasetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class procDefectCostAnalysisrptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public procDefectCostAnalysisrptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "procDefectCostAnalysisrpt";
            tableMapping.ColumnMappings.Add("SetDate", "SetDate");
            tableMapping.ColumnMappings.Add("MoldDataID", "MoldDataID");
            tableMapping.ColumnMappings.Add("SetTime", "SetTime");
            tableMapping.ColumnMappings.Add("MoldName", "MoldName");
            tableMapping.ColumnMappings.Add("MoldDesc", "MoldDesc");
            tableMapping.ColumnMappings.Add("SetPressNumb", "SetPressNumb");
            tableMapping.ColumnMappings.Add("DfctID", "DfctID");
            tableMapping.ColumnMappings.Add("TSDefects", "TSDefects");
            tableMapping.ColumnMappings.Add("DfctCavNum", "DfctCavNum");
            tableMapping.ColumnMappings.Add("DfctDescript", "DfctDescript");
            tableMapping.ColumnMappings.Add("ProductLine", "ProductLine");
            tableMapping.ColumnMappings.Add("ProductPart", "ProductPart");
            tableMapping.ColumnMappings.Add("DfctDate", "DfctDate");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("DfctNotes", "DfctNotes");
            tableMapping.ColumnMappings.Add("MldPullDate", "MldPullDate");
            tableMapping.ColumnMappings.Add("MldPullTime", "MldPullTime");
            tableMapping.ColumnMappings.Add("CavityLocationNumber", "CavityLocationNumber");
            tableMapping.ColumnMappings.Add("DfctTime", "DfctTime");
            tableMapping.ColumnMappings.Add("CavityNumber", "CavityNumber");
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName");
            tableMapping.ColumnMappings.Add("CompanyCNBlockedDefects", "CompanyCNBlockedDefects");
            tableMapping.ColumnMappings.Add("SetTech", "SetTech");
            tableMapping.ColumnMappings.Add("TSDefects1", "TSDefects1");
            tableMapping.ColumnMappings.Add("TlCorrectiveAction", "TlCorrectiveAction");
            tableMapping.ColumnMappings.Add("TlTechnician", "TlTechnician");
            tableMapping.ColumnMappings.Add("TlQuantity", "TlQuantity");
            tableMapping.ColumnMappings.Add("CaTech", "CaTech");
            tableMapping.ColumnMappings.Add("DftcEstTime", "DftcEstTime");
            tableMapping.ColumnMappings.Add("LineTotal", "LineTotal");
            tableMapping.ColumnMappings.Add("TimeCost", "TimeCost");
            tableMapping.ColumnMappings.Add("SubTotalCost", "SubTotalCost");
            tableMapping.ColumnMappings.Add("CompanyCNRepairCosts", "CompanyCNRepairCosts");
            tableMapping.ColumnMappings.Add("MoldToolDescrip", "MoldToolDescrip");
            tableMapping.ColumnMappings.Add("MoldToolingPartNumber", "MoldToolingPartNumber");
            tableMapping.ColumnMappings.Add("MoldToolCost", "MoldToolCost");
            tableMapping.ColumnMappings.Add("TlReplID", "TlReplID");
            tableMapping.ColumnMappings.Add("MoldConfig", "MoldConfig");
            tableMapping.ColumnMappings.Add("MoldConfig2", "MoldConfig2");
            tableMapping.ColumnMappings.Add("TIRepairTime", "TIRepairTime");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Moldtrax_Ashland_WebConnectionString1"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.procDefectCostAnalysisrpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoldDataID", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DefectCostAnalysisDataset.procDefectCostAnalysisrptDataTable dataTable, global::System.Nullable<double> MoldDataID, global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MoldDataID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((double)(MoldDataID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((StartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DefectCostAnalysisDataset.procDefectCostAnalysisrptDataTable GetData(global::System.Nullable<double> MoldDataID, global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MoldDataID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((double)(MoldDataID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((StartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            DefectCostAnalysisDataset.procDefectCostAnalysisrptDataTable dataTable = new DefectCostAnalysisDataset.procDefectCostAnalysisrptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(DefectCostAnalysisDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(DefectCostAnalysisDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(DefectCostAnalysisDataset dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(DefectCostAnalysisDataset dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591