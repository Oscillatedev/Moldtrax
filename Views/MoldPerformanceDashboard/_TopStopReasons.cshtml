@model IEnumerable<Moldtrax.Models.StopReasonCharts>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<div id="StopReasonChart"></div>

<script type="text/javascript">

            // Load the Visualization API and the corechart package.
            google.charts.load('current', { 'packages': ['corechart'] });

            // Set a callback to run when the Google Visualization API is loaded.
            google.charts.setOnLoadCallback(drawChart);

            // Callback that creates and populates a data table,
            // instantiates the pie chart, passes in the data and
            // draws it.
            function drawChart() {

                // Create the data table.
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'name');
                data.addColumn('number', 'y');

                @*$.getJSON("@Url.Action("GetData")", null, function (chartData) {
            $.each(chartData, function (i, item) {
                data.addRow([item.Name, item.Y]);
            });
        })*@

                @*data.addRow(['@Model.Status', @Model.CurrentMoldsRunning])*@

                @foreach (var x in Model)
                 {
                  @: data.addRow(['@Html.Raw(x.MoldStopReason)',@x.StopCount])
                 }

                var options = {

                    'title': 'Top 10 X-Stops Reasons',
                    'width': 580,
                    'height': 500,
                    'chartArea': { left: 10, width: "100%", height: 430 },
                    'legend': { textStyle: { fontSize: 13 }, position: 'Right', alignment: 'center' },
                    'titleTextStyle': { color: "black", fontSize: 22, bold: true, italic: false },
                };

                // Instantiate and draw our chart, passing in some options.
                var chart = new google.visualization.PieChart(document.getElementById('StopReasonChart'));
                chart.draw(data, options);
            }


            function printDiv(divName) {
                var printContents = document.getElementById(divName).innerHTML;
                var originalContents = document.body.innerHTML;

                document.body.innerHTML = printContents;

                window.print();

                document.body.innerHTML = originalContents;
            }
</script>

