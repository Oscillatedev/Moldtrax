
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .input-group {
        width: 50%;
        margin-bottom: 5px;
    }

    #search_bar {
        width: 100%;
    }

        #search_bar span.input-group-text {
            padding: 2px;
            border: 1px solid #9E9E9E;
            color: #000;
            cursor: pointer;
        }

    input#SearchBar {
        border: 1px solid #9E9E9E;
        border-radius: 4px 0 0 4px;
        box-shadow: inset 0 0 5px 0 rgba(43,43,43,.1);
        border-right: 0;
    }

    span.input-group-text.down {
        border-radius: 0 4px 4px 0 !important;
    }

    .right_side {
        width: 35%;
    }

    .left_side {
        width: 65%;
    }

    a#DownloadTemplate {
        margin-right: 3px;
    }
</style>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css" />
<script src="//cdn.jsdelivr.net/npm/medium-editor@latest/dist/js/medium-editor.min.js"></script>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/medium-editor@latest/dist/css/medium-editor.min.css" type="text/css" media="screen" charset="utf-8">
<script src="~/Scripts/spectrum.min.js"></script>
<link href="~/Content/beagle.css" rel="stylesheet" />
<link href="~/Content/spectrum.min.css" rel="stylesheet" />

<div class="row">
    <div id="MainMoldDiv" class="col-lg-2 col-md-3 col-sm-3 padding_10">
        <div class="input-group" id="search_bar">
            <input type="text" placeholder="Type for search.." id="SearchBar" class="form-control" />
            <div class="input-group-prepend">
                <span class="input-group-text up" onclick="SortingMold(0)" id="AscdingMoldOrder"><i data-feather="arrow-up"></i></span>
                <span class="input-group-text down" onclick="SortingMold(1)" id="DescdingMoldOrder"><i data-feather="arrow-down"></i></span>
            </div>
        </div>
        <div id="MoldDiv">
            @Html.Action("MoldGetData", "DetailMoldInfo")
        </div>
    </div>
    <div class="col-lg-10 col-md-9 col-sm-9 padding_10">
        <div class="card box_design">
            <div class="c_head">
                <div class="card_header left_side">
                    <h5 id="MainTitle"></h5>
                    <input type="hidden" id="MainMoldHidnID" />
                </div>
                <div class="card_header right_side">
                    <h5 id="TraciRiskFactor"></h5>
                    @*<h5 id="RightTitle"></h5>*@
                    <input type="hidden" id="MainMoldHidnID" />
                </div>
            </div>
            <div class="card_body">
                <div class="card_inner_block">
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs sticky-top MainMoldNav">
                        <li class="nav-item" id="Mold" name="1">
                            <a class="nav-link active" data-toggle="tab" href="#" id="Mold" value="Mold" onclick="CallTabFunc('Mold')">Mold</a>
                        </li>
                        <li class="nav-item" id="Tooling">
                            <a class="nav-link" data-toggle="tab" href="#" id="Tooling" onclick="CallTabFunc('Tooling')">Tooling</a>
                        </li>
                        <li class="nav-item" id="Layout">
                            <a class="nav-link" data-toggle="tab" href="#" id="Layout" onclick="CallTabFunc('Layout')">Layout</a>
                        </li>
                        <li class="nav-item" id="IMLMap">
                            <a class="nav-link" data-toggle="tab" href="#" id="IMLMap" onclick="CallTabFunc('IMLMap')">IML Map</a>
                        </li>
                        <li class="nav-item" id="TroubleShooter">
                            <a class="nav-link" data-toggle="tab" href="#" id="TroubleShooter" onclick="CallTabFunc('TroubleShooter')">Troubleshooter Guide</a>
                        </li>
                        <li class="nav-item" id="TechTips">
                            <a class="nav-link" data-toggle="tab" href="#" id="TechTips" onclick="CallTabFunc('TechTips')">Tech Tips</a>
                        </li>
                        <li class="nav-item" id="Notes">
                            <a class="nav-link" data-toggle="tab" href="#" id="Notes" onclick="CallTabFunc('Notes')">Notes</a>
                        </li>
                        <li class="nav-item" id="Servicing">
                            <a class="nav-link" data-toggle="tab" href="#" id="Servicing" onclick="CallTabFunc('Servicing')">Servicing</a>
                        </li>
                    </ul>

                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div id="MoldTb" class="tab-pane active">
                            @Html.Action("MoldDetails", "DetailMoldInfo")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#navDetail').addClass('actives');

        var date = new Date('@ViewBag.CreatedDate');
        var TodayDate = new Date();

        var d = new Date();
        var dd = addMonths(date, 2);

        if (TodayDate > dd) {
            Swal.fire('Your password has been expired. Please reset you password.');
        }
        else
        {
            var NoofDays = Math.floor((Date.parse(dd) - Date.parse(TodayDate)) / 86400000);
            if (NoofDays <= 6) {
                Swal.fire('Your password will be expired in ' + NoofDays + ' Days. Please reset you password.');
            }
        }
    });


    function addMonths(date, months) {
        var d = date.getDate();
        date.setMonth(date.getMonth() + +months);
        if (date.getDate() != d) {
            date.setDate(0);
        }
        return date;
    }

    function CallTabFunc(str) {
        var MoldID = "";

        $('#MainMoldList tbody tr').each(function (i) {
            var row = $(this);

            if ($(this).attr('class') == 'active') {
                MoldID = $(this).attr('id');
            }
        });

        var PreviousTab = '';

        $('.MainMoldNav li').each(function (i) {
            if ($(this).attr('name') == 1) {
                PreviousTab = $(this).attr('id');
            }
        });

        if (PreviousTab == "Mold") {
            $("#SaveBtnMoldDetails").click();
        }
        else if (PreviousTab == "Tooling") {
            $("#EditTooling").click();
        }
        else if (PreviousTab == "TroubleShooter") {
            $("#EditTroubleShtr").click();
        }
        else if (PreviousTab == "TechTips") {
            $("#SavetechTips11").click();
            //SaveTechTipForm();
        }
        else if (PreviousTab == "Servicing") {
            $("#SaveServicingData").click();
        }
        else if (PreviousTab == "Notes") {
            $("#SaveNotesBtn").click();
        }

        var FuncName = "";
        if (str == 'Mold') {
            FuncName = "MoldDetails";
        }

        else if (str == "Tooling") {
            FuncName = "ToolingGetData";
        }

        else if (str == "Layout") {
            FuncName = "GetLayoutData";
        }

        else if (str == "IMLMap") {
            FuncName = "IMLImageLoad";
        }

        else if (str == "TroubleShooter") {
            FuncName = "TroubleShooterGetData";
        }

        else if (str == "TechTips") {
            FuncName = "GetTechTips";
        }

        else if (str == "Notes") {
            FuncName = "GetNotesList";
        }

        else {
            FuncName = "GetServicingData";
        }

        $.ajax({
            url: '/DetailMoldInfo/' + FuncName + "?ID=" + MoldID,
            type: 'Get',
            success: function (data) {
                var nn = "";

                $("#MoldTb").html(data);
                //$('#MoldTb').find(".datepicker").datepicker({ dateFormat: "yy-mm-dd" });

                $(".editable").attr('data-placeholder', '');
                $(".medium-editor-element").attr('data-placeholder', '');
            },
            error: function () {

            }
        })

        $('.MainMoldNav li').each(function (i) {
            $(this).attr('name', '');
        });

        $('.MainMoldNav li').each(function (i) {
            var vv = $(this).attr('id');
            if (vv == str) {
                $(this).attr('name', '1');
            }
        });
    }

    function activaTab(tab) {
        $('.nav-tabs a[href="#' + tab + '"]').tab('show');
    };
</script>

<script>

    $("#SearchBar").keyup(function () {
        var str = $("#SearchBar").val();
        $.ajax({
            url: '/DetailMoldInfo/SearchMold',
            type: 'Post',
            data: { str: str },
            success: function (data) {
                $("#MoldDiv").html(data);

            },
            error: function () {

            }
        })
    })


    function SortingMold(ID) {
        $.ajax({
            url: '/DetailMoldInfo/SortingMoldList?ID=' + ID,
            type: 'Post',
            success: function (data) {
                $("#MoldDiv").html(data);
            },
            error: function () {

            }
        })
    }


    var ColorPickerExtension = MediumEditor.extensions.button.extend({
        name: "colorPicker",
        action: "applyForeColor",
        aria: "color picker",
        contentDefault: "<span class='editor-color-picker'>Text Color<span>",

        init: function () {
            this.button = this.document.createElement('button');
            this.button.classList.add('medium-editor-action');
            this.button.innerHTML = '<b>C</b>';
            initPicker(this.button);
        }
    });

    var pickerExtension = new ColorPickerExtension();

    function setColor(color) {
        pickerExtension.base.importSelection(this.selectionState);
        pickerExtension.document.execCommand("styleWithCSS", false, true);
        pickerExtension.document.execCommand("foreColor", false, color);
    }

    function initPicker(element) {
        $(element).spectrum({
            allowEmpty: true,
            color: "#f00",
            showInput: true,
            showAlpha: true,
            showPalette: true,
            showInitial: true,
            hideAfterPaletteSelect: false,
            preferredFormat: "hex3",
            change: function (color) {
                setColor(color);
            },
            hide: function (color) {
                //applyColor(color);
            },
            palette: [
                ["#000", "#444", "#666", "#999", "#ccc", "#eee", "#f3f3f3", "#fff"],
                ["#f00", "#f90", "#ff0", "#0f0", "#0ff", "#00f", "#90f", "#f0f"],
                ["#f4cccc", "#fce5cd", "#fff2cc", "#d9ead3", "#d0e0e3", "#cfe2f3", "#d9d2e9", "#ead1dc"],
                ["#ea9999", "#f9cb9c", "#ffe599", "#b6d7a8", "#a2c4c9", "#9fc5e8", "#b4a7d6", "#d5a6bd"],
                ["#e06666", "#f6b26b", "#ffd966", "#93c47d", "#76a5af", "#6fa8dc", "#8e7cc3", "#c27ba0"],
                ["#c00", "#e69138", "#f1c232", "#6aa84f", "#45818e", "#3d85c6", "#674ea7", "#a64d79"],
                ["#900", "#b45f06", "#bf9000", "#38761d", "#134f5c", "#0b5394", "#351c75", "#741b47"],
                ["#600", "#783f04", "#7f6000", "#274e13", "#0c343d", "#073763", "#20124d", "#4c1130"]
            ]
        });
    }
    //ColorPickerExtension = MediumEditor.util.derives(MediumEditor.statics.DefaultButton, ColorPickerDerived);

    var editor = new MediumEditor('.editable', {
        toolbar: {
            buttons: ['bold', 'italic', 'underline', 'anchor', 'colorPicker']
        },
        extensions: {
            'colorPicker': pickerExtension
        }
    });

</script>