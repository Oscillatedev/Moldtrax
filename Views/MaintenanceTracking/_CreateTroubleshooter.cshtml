@model Moldtrax.Models.tblTSGuide
@*<br />*@
@{
    int Userid = ViewBag.MoldID;
    Layout = null;
}
<style>
    /* width */
    .editor_div textarea::-webkit-scrollbar {
        width: 10px;
    }

    /* Track */
    .editor_div textarea::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    /* Handle */
    .editor_div textarea::-webkit-scrollbar-thumb {
        background: #888;
    }

        /* Handle on hover */
        .editor_div textarea::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

    ::selection {
        color: #000;
        /* WebKit/Blink Browsers */
        background-color: #b1d7fe;
    }


    ::-moz-selection {
        color: #ccc;
        /* Gecko Browsers */
        background-color: #b1d7fe;
    }

    .editable,
    .editable:focus {
        outline: 0px solid transparent;
    }
    .modal-dialog {
        top: 0;
        right: 0;
    }
</style>

@*@using (Html.BeginForm("CreatetrbleShooter", "MaintenanceTracking", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {*@
<form id="CreateTruoble" enctype="multipart/form-data">
    <table class="table table-responsive table-bordered table-condensed table-striped" id="table_trouble">
        <thead>
            <tr>
                <th>No Type</th>
                <th>Defect Term</th>
                <th>Defect or Task Explaination</th>
                <th>Probable Cause</th>
                <th>Corrective Action</th>
                <th>Preventative Action</th>
            </tr>
        </thead>
        <tbody>

            <tr>
                <td class="table_first_div">
                    <div>
                        <input type="hidden" id="MoldDataID" name="MoldDataID" value="@Userid" />
                        <div class="w-100">
                            @Html.DropDownListFor(Model => Model.TSType, ViewBag.NoType as SelectList, "-Select Defect /Task Type-", new { htmlAttributes = new { @class = "form-control" } })

                            @*<select id="TSType">
                                    <option></option>
                                    @foreach (var i in ViewBag.NoType)
                                    {
                                        <option value="@i.Text">@i.Text</option>
                                    }
                                </select>*@
                        </div>
                        <div class="w-100">
                            <input type="button" onclick="OpenImg()" class="add_btn" value="Add Image" />
                            @*<button onclick="OpenImg()" class="add_btn">Add Image</button>*@
                        </div>
                        <div class="w-100">
                            <input type="button" onclick="DelImg()" class="del_btn" value="Delete Image" />
                            @*<button onclick="DelImg()" class="del_btn">Delete Image</button>*@
                        </div>
                        <div class="w-100">
                            <input type="file" value="Add Image" id="AddImg" name="AddImg" class="MyFile" />
                        </div>
                        <div class="w-100">
                            @*<input type="file" value="Add Image" id="DelImg" class="MyFile" />*@
                        </div>
                    </div>
                </td>
                <td class="table_sec_div">
                    <div class="w-100">
                        <input type="text" autocomplete="off" id="TSDefects" name="TSDefects" value="" class="form-control" />
                        <div id="UpdatedImg">
                            <img id="UploadedFile" />
                            @*<img id="image" alt="" src="" />*@
                        </div>
                    </div>
                </td>
                <td class="table_third_div">
                    <div class="editor_div TSExplainDiv" id="editor1">
                        <textarea rows="11" autocomplete="off" id="TSExplanation" name="TSExplanation" class="textarea-editor editable"></textarea>
                        <input type="button" style="display:none;" id="Showtxtbtn" data-target="#Modal_textarea" data-toggle="modal" />
                        @*<button style="display:none;" id="Showtxtbtn" data-target="#Modal_textarea" data-toggle="modal"></button>*@
                    </div>
                </td>
                <td class="table_fourth_div">
                    <div class="editor_div TSProbDiv" id="editor2">
                        <textarea rows="11" autocomplete="off" id="TSProbCause" name="TSProbCause" class="textarea-editor editable"></textarea>
                    </div>
                </td>
                <td class="table_fifth_div">
                    <div class="editor_div TSSolutionDiv" id="editor3">
                        <textarea rows="11" autocomplete="off" id="TSSolution" name="TSSolution" class="textarea-editor editable"></textarea>
                    </div>
                </td>
                <td class="table_six_div">
                    <div class="editor_div TSPreventDiv" id="editor4">
                        <textarea rows="11" autocomplete="off" id="TSPreventAction" name="TSPreventAction" class="textarea-editor editable"></textarea>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
    <div class="row">
        <div class="col-md-12 text-right btn_css">
            <input type="submit" id="btnsubmit" value="Save" class="add_btn" />
            <input type="button" class="delete_btn" id="CnclBtn" value="Cancel" />
        </div>
    </div>
</form>
<div class="modal" id="Modal_textarea">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" style="display:none" class="close1" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <textarea id="ShowTxtVal" autocomplete="off" class="textarea-editor2"></textarea>
                @*<div id="ShowTxtVal" class="editable"></div>*@
                <div class="row">
                    <div class="col-md-12 text-right btn_css">
                        <button id="SaveTxtbtn" class="add_btn">Save</button>
                        <button class="del_btn">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*<button class="delete_btn" id="CnclBtn">Cancel</button>*@
<script src="//cdn.jsdelivr.net/npm/medium-editor@latest/dist/js/medium-editor.min.js"></script>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/medium-editor@latest/dist/css/medium-editor.min.css" type="text/css" media="screen" charset="utf-8">
<script src="~/Scripts/spectrum.min.js"></script>
<link href="~/Content/beagle.css" rel="stylesheet" />
<link href="~/Content/spectrum.min.css" rel="stylesheet" />
<script src="~/dist/summernote-lite.js"></script>
<script> 
    $('.textarea-editor2').summernote(
        {
            toolbar: [
              ['style', ['style']],
              ['fontsize', ['fontsize']],
              ['font', ['bold', 'italic', 'underline', 'clear']],
              ['fontname', ['fontname']],
              ['color', ['color']],
              ['para', ['ul', 'ol', 'paragraph']],
              ['height', ['height']],
              ['insert', ['link','picture', 'hr']],
              ['view', ['fullscreen', 'codeview', 'help']]
            ],
            height: 500,                 // set editor height
            minHeight: null,             // set minimum height of editor
            maxHeight: null,
            popover: {
                link: []
            },// set maximum height of editor
            focus: true                  // set focus to editable area after initializing summernote
        });
    $('.note-editable').css('font-size', '13px');

</script>
<link href="~/dist/summernote-lite.css" rel="stylesheet" />

<script>
    $(document).ready(function ()
    {
        $(".editable").attr('data-placeholder', '');
    })


    $.fn.extend({
        placeCursorAtEnd: function () {
            // Places the cursor at the end of a contenteditable container (should also work for textarea / input)
            if (this.length === 0) {
                throw new Error("Cannot manipulate an element if there is no element!");
            }
            var el = this[0];
            var range = document.createRange();
            var sel = window.getSelection();
            var childLength = el.childNodes.length;
            if (childLength > 0) {
                var lastNode = el.childNodes[childLength - 1];
                var lastNodeChildren = lastNode.childNodes.length;
                range.setStart(lastNode, lastNodeChildren);
                range.collapse(true);
                sel.removeAllRanges();
                sel.addRange(range);
            }
            return this;
        }
    });





    function OpenImg()
    {
        $("#AddImg").click();
    }


    var ColorPickerExtension = MediumEditor.extensions.button.extend({
        name: "colorPicker",
        action: "applyForeColor",
        aria: "color picker",
        contentDefault: "<span class='editor-color-picker'>Text Color<span>",

        init: function () {
            this.button = this.document.createElement('button');
            this.button.classList.add('medium-editor-action');
            this.button.innerHTML = '<b>C</b>';
            initPicker(this.button);
        }
    });

    var pickerExtension = new ColorPickerExtension();


    function setColor(color) {
        pickerExtension.base.importSelection(this.selectionState);
        pickerExtension.document.execCommand("styleWithCSS", false, true);
        pickerExtension.document.execCommand("foreColor", false, color);
    }

    function initPicker(element) {
        $(element).spectrum({
            allowEmpty: true,
            color: "#f00",
            showInput: true,
            showAlpha: true,
            showPalette: true,
            showInitial: true,
            hideAfterPaletteSelect: false,
            preferredFormat: "hex3",
            change: function (color) {
                setColor(color);
            },
            hide: function (color) {
                //applyColor(color);
            },
            palette: [
                ["#000", "#444", "#666", "#999", "#ccc", "#eee", "#f3f3f3", "#fff"],
                ["#f00", "#f90", "#ff0", "#0f0", "#0ff", "#00f", "#90f", "#f0f"],
                ["#f4cccc", "#fce5cd", "#fff2cc", "#d9ead3", "#d0e0e3", "#cfe2f3", "#d9d2e9", "#ead1dc"],
                ["#ea9999", "#f9cb9c", "#ffe599", "#b6d7a8", "#a2c4c9", "#9fc5e8", "#b4a7d6", "#d5a6bd"],
                ["#e06666", "#f6b26b", "#ffd966", "#93c47d", "#76a5af", "#6fa8dc", "#8e7cc3", "#c27ba0"],
                ["#c00", "#e69138", "#f1c232", "#6aa84f", "#45818e", "#3d85c6", "#674ea7", "#a64d79"],
                ["#900", "#b45f06", "#bf9000", "#38761d", "#134f5c", "#0b5394", "#351c75", "#741b47"],
                ["#600", "#783f04", "#7f6000", "#274e13", "#0c343d", "#073763", "#20124d", "#4c1130"]
            ]
        });
    }
    //ColorPickerExtension = MediumEditor.util.derives(MediumEditor.statics.DefaultButton, ColorPickerDerived);

    var editor = new MediumEditor('.editable', {
        toolbar: {
            buttons: ['bold', 'italic', 'underline', 'anchor', 'colorPicker']
        },
        extensions: {
            'colorPicker': pickerExtension
        }
    });

    $("#CnclBtn").click(function () {
        var MoldID = $("#MoldResinType").val();
        $.ajax({
            url: '/MaintenanceTracking/TroubleShooterGetData?ID=' + MoldID,
            type: 'Get',
            success: function (data)
            {
                $("#MaintenanceMain").html(data);
                $(".medium-editor-placeholder").attr("data-placeholder", "")
            },
            error: function ()
            {

            }
        })
    })


    $("#CreateTruoble").submit(function (e)
    {
        e.preventDefault();

        var model = $("#CreateTruoble").serialize();

        var fileUpload = $("#AddImg").get(0);
        var files = fileUpload.files;

        var formdata = new FormData();

        for (var i = 0; i < files.length; i++) {
            formdata.append(files[i].name, files[i]);
        }

        formdata.append('TSDefects', $("#TSDefects").val());

        var TSExpl = $("#editor1").html();
        var TSExpl1 = $.parseHTML(TSExpl);
        formdata.append('TSExplanation', TSExpl1[1].innerHTML);

        var TSProb = $("#editor2").html();
        var TSProb1 = $.parseHTML(TSProb);
        formdata.append('TSProbCause', TSProb1[1].innerHTML);

        var TSSolu = $("#editor3").html();
        var TSSolu1 = $.parseHTML(TSSolu);
        formdata.append('TSSolution', TSSolu1[1].innerHTML);

        var TSPreven = $("#editor4").html();
        var TSPreven1 = $.parseHTML(TSPreven);
        formdata.append('TSPreventAction', TSPreven1[1].innerHTML);


        //formdata.append('TSExplanation', $("#TSExplanation").val());
        //formdata.append('TSProbCause', $("#TSProbCause").val());
        //formdata.append('TSSolution', $("#TSSolution").val());
        //formdata.append('TSPreventAction', $("#TSPreventAction").val());
        formdata.append('MoldDataID', @Userid);
        formdata.append('TSType', $("#TSType").val());

        $.ajax({
            url: '/MaintenanceTracking/CreateTroubleShooter',
            type: 'POST',
            contentType: false,
            processData: false,
            data: formdata,
            success: function (data)
            {
                Swal.fire({
                    text: 'Data saved Successfully.',
                    type: "success"
                }).then(function () {
                    $("#MaintenanceMain").html(data);
                    $(".medium-editor-placeholder").attr("data-placeholder", "")
                    })
            },
            error: function ()
            {

            }


        })

    })

    $("#SaveTxtbtn").click(function () {
        var data = $(".note-editable").html();
        $('[name=NewDDID]').html(data);
        $('[name=NewDDID2]').html(data);
        $('[name=NewDDID2]').attr('name', '');
        $('[name=NewDDID]').attr('name', '');
        $(".close1").click();
        $(".popover-content").hide();
        //var data = $(".note-editable").html();
        //$('[name=NewDDID]').html(data);
        //$('[name=NewDDID]').attr('name', '');
        //$(".close1").click();
    })

    $(".del_btn").click(function () {

        $('[name=NewDDID2]').attr('name', '');
        $('[name=NewDDID]').attr('name', '');
        $(".close1").click();
        //$('[name=NewDDID]').attr('name', '');
        //$(".close1").click();

        //$('[name=NewDDID]').attr('name', '');
        //$(".close1").click();
    })


    $(".TSExplainDiv").dblclick(function () {

        $(".editable").attr('data-placeholder', '');
        //$(".modal-header").html('MoldTrax');
        var row = $(this);
        var dd = $(this).closest("tr").find("td:eq(2)").find("#editor1").html();
        var newdata = $.parseHTML(dd);
        $("#Showtxtbtn").click();
        //$("#ShowTxtVal").attr('data-placeholder', '');
        $(".note-editable").html(newdata[1].innerHTML);
        $(this).closest("tr").find("td:eq(2)").find("#TSExplanation").attr('name', 'NewDDID');
        $(this).closest("tr").find("td:eq(2)").find(".editable").attr('name', 'NewDDID2');
        if (newdata[1].innerHTML == "") {
            $('.note-editable').trigger('focus');
        }

        else {
            $('.note-editable').placeCursorAtEnd();
        }
        //var row = $(this);
        //var dd = row.eq(0).find("#TSExplanation").val();
        //$("#Showtxtbtn").click();
        ////$("#ShowTxtVal").attr('data-placeholder', '');
        //$(".note-editable").html(dd);
        //row.eq(0).find(".editable").attr('name', 'NewDDID');
    })

    $(".TSProbDiv").dblclick(function () {

        var row = $(this);
        $(".editable").attr('data-placeholder', '');
        var dd = $(this).closest("tr").find("td:eq(3)").find("#editor2").html();
        //var dd = $(this).closest("tr").find("td:eq(4)").find("#TSProbCause").val();
        var newdata = $.parseHTML(dd);

        $("#Showtxtbtn").click();
        //$("#ShowTxtVal").attr('data-placeholder', '');
        $(".note-editable").html(newdata[1].innerHTML);
        $(this).closest("tr").find("td:eq(3)").find("#TSProbCause").attr('name', 'NewDDID');
        $(this).closest("tr").find("td:eq(3)").find(".editable").attr('name', 'NewDDID2');
        if (newdata[1].innerHTML == "") {
            $('.note-editable').trigger('focus');
        }

        else {
            $('.note-editable').placeCursorAtEnd();
        }
        //var row = $(this);
        //var dd = row.eq(0).find("#TSProbCause").val();
        //$("#Showtxtbtn").click();
        ////$("#ShowTxtVal").attr('data-placeholder', '');
        //$(".note-editable").html(dd);
        //row.eq(0).find(".editable").attr('name', 'NewDDID');
    })

    $(".TSSolutionDiv").dblclick(function () {

        var row = $(this);
        $(".editable").attr('data-placeholder', '');
        var dd = $(this).closest("tr").find("td:eq(4)").find("#editor3").html();
        //var dd = $(this).closest("tr").find("td:eq(5)").find("#TSSolution").val();
        var newdata = $.parseHTML(dd);
        $("#Showtxtbtn").click();
        $(".note-editable").html(newdata[1].innerHTML);
        $(this).closest("tr").find("td:eq(4)").find("#TSSolution").attr('name', 'NewDDID');
        $(this).closest("tr").find("td:eq(4)").find(".editable").attr('name', 'NewDDID2');
        if (newdata[1].innerHTML == "") {
            $('.note-editable').trigger('focus');
        }

        else {
            $('.note-editable').placeCursorAtEnd();
        }

        //var row = $(this);
        //var dd = row.eq(0).find("#TSSolution").val();
        //$("#Showtxtbtn").click();
        ////$("#ShowTxtVal").attr('data-placeholder', '');
        //$(".note-editable").html(dd);
        //row.eq(0).find(".editable").attr('name', 'NewDDID');
    })

    $(".TSPreventDiv").dblclick(function () {

        var row = $(this);
        $(".editable").attr('data-placeholder', '');
        var dd = $(this).closest("tr").find("td:eq(5)").find("#editor4").html();
        var newdata = $.parseHTML(dd);
        //var dd = $(this).closest("tr").find("td:eq(6)").find("#TSPreventAction").val();
        $("#Showtxtbtn").click();
        $(".note-editable").html(newdata[1].innerHTML);
        $(this).closest("tr").find("td:eq(5)").find("#TSPreventAction").attr('name', 'NewDDID');
        $(this).closest("tr").find("td:eq(5)").find(".editable").attr('name', 'NewDDID2');
        if (newdata[1].innerHTML == "") {
            $('.note-editable').trigger('focus');
        }

        else {
            $('.note-editable').placeCursorAtEnd();
        }

        //var row = $(this);
        //var dd = row.eq(0).find("#TSPreventAction").val();
        //$("#Showtxtbtn").click();
        ////$("#ShowTxtVal").attr('data-placeholder', '');
        //$(".note-editable").html(dd);
        //row.eq(0).find(".editable").attr('name', 'NewDDID');
    })

    $(document).ready(function () {
        $("#AddTroubleShtr").hide();
        $("#EditTroubleShtr").hide();
        $("#DeleteTroubleShtr").hide();


        $("#AddImg").change(function (){
            var file = document.getElementById("AddImg").files[0];
            var readImg = new FileReader();
            readImg.readAsDataURL(file);
            readImg.onload = function (e) {
                $('#UploadedFile').attr('src', e.target.result).fadeIn();
            }
        });
    });

    function DelImg() {
        $('#UploadedFile').attr('src', '').fadeIn();
    }




</script>
