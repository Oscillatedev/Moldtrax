@model Moldtrax.Models.MainCurrentMoldRunning


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>


    .pcoded-inner-content {
        padding: 0;
    }

    .report_body .report_row {
        margin: 0;
    }

    .report_body .report_col {
        padding: 10px;
    }

    .card.box_design {
        border-radius: 0;
        background: #00000017;
    }
</style>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<div class="report_header">
    <h3 class="r_head">
        Maintenance Alert Stats
    </h3>
</div>
@*<div class="width-100">
    @*<div class="width-50">
        <div class="card box_design">
            <div class="card_body">
                <div class="row">
                    <div class="col-md-12 btn_css" style="padding-top: 8px;">
                        <a href="/MaintenanceAlertStat/Index" class="del_btn">Refresh Chart</a>
                        <a href="#" onclick="printDiv('chart_div')" target="_blank" class="add_btn">Print</a>
                    </div>
                </div>
                <div id="chart_div">
                </div>
                <div class="w-600">
                    <div class="w-300 btn_css">
                        <a href="/MaintenanceAlertStat/ShowViewData" target="_blank" class="create_btn">View Data</a>
                        <a href="#" id="PrintViewData1" target="_blank" class="del_btn">Print View Data</a>
                    </div>
                    <div class="w-300 text-right">
                        <label>Current Molds Running</label> <input type="text" value="@ViewBag.CurrentMold" class="view_ip" disabled />
                    </div>
                </div>
            </div>
        </div>
    </div>*@
    <div class="width-50">
        <div class="card box_design">
            <div class="card_body">
                <div class="row">
                    <div class="col-md-12 btn_css" style="padding-top: 8px;">
                        <a href="/MaintenanceAlertStat/Index" class="del_btn">Refresh Chart</a>
                        <a href="#" onclick="printDiv('chart_div2')" target="_blank" class="add_btn">Print</a>
                    </div>
                </div>
                @*<button onclick="window.location.href='/MaintenanceAlertStat/PrintPDF'" formtarget="_blank">Print</button>*@
                @*<button onclick="window.location.href='/MaintenanceAlertStat/Index'">Refresh Chart</button>*@
                <div id="chart_div2">
                </div>
                <div class="w-600">
                    <div class="w-300 btn_css">
                        <a href="/MaintenanceAlertStat/GetPMALertReport" target="_blank" class="create_btn">View Data</a>
                        @*<a href="/MaintenanceAlertStat/ShowViewData2" target="_blank" class="create_btn">View Data</a>*@
                        <a href="#" id="PrintViewData2" target="_blank" class="del_btn">Print View Data</a>
                    </div>
                    <div class="w-300 text-right">
                        <label>Current Molds Running</label> <input type="text" value="@ViewBag.CurrentMold2" class="view_ip" disabled />
                    </div>
                </div>
            </div>
        </div>
    </div>
@*</div>*@


<script>
    $("#PrintViewData1").click(function () {
        window.open("/MaintenanceAlertStat/PrintFile?Print=0");
    })

    $("#PrintViewData2").click(function () {
        window.open("/MaintenanceAlertStat/PrintFile?Print=1");
    })
</script>

@*<script type="text/javascript">

            google.charts.load('current', { 'packages': ['corechart'] });
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {

                var data = new google.visualization.DataTable();
                data.addColumn('string', 'name');
                data.addColumn('number', 'y');

                @foreach (var x in Model.CurrentMoldRunning1)
                 {
                  @: data.addRow(['@x.Status',@x.Count])
                 }

                var options = {
                    'title': 'Mold PM Cycle Alert',
                    'width': 600,
                    'height': 500,
                    'chartArea': { left: 10, width: "100%", height: 430 },
                    'colors': ['Green', '#d71c33']
                };

                var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
                chart.draw(data, options);
    }


    function printDiv() {
        var divContents = document.getElementById("chart_div").innerHTML;
        var a = window.open('', '', 'height=1000px, width=1000px');
        a.document.write('<html>');
        a.document.write('<body >');
        a.document.write(divContents);
        a.document.write('</body></html>');
        a.document.close();
        a.print();
        a.close();
    }

        </script>*@

<script type="text/javascript">

            // Load the Visualization API and the corechart package.
            google.charts.load('current', { 'packages': ['corechart'] });

            // Set a callback to run when the Google Visualization API is loaded.
            google.charts.setOnLoadCallback(drawChart);

            // Callback that creates and populates a data table,
            // instantiates the pie chart, passes in the data and
            // draws it.
            function drawChart() {

                // Create the data table.
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'name');
                data.addColumn('number', 'y');
               

                @*$.getJSON("@Url.Action("GetData")", null, function (chartData) {
            $.each(chartData, function (i, item) {
                data.addRow([item.Name, item.Y]);
            });
        })*@

                @*data.addRow(['@Model.Status', @Model.CurrentMoldsRunning])*@

                @foreach (var x in Model.CurrentMoldRunning2)
                 {
                  @: data.addRow(['@x.Status',@x.Count])
                 }

                

                var colors = {
                    'PM Approaching': 'yellow',
                    'PM Good': 'Green',
                    'PM Past Due': 'red',
                    'No Limits Set': 'White'
                }

                var slices = [];
                for (var i = 0; i < data.getNumberOfRows(); i++) {
                    slices.push({
                        color: colors[data.getValue(i, 0)]
                    });
                }

                var options = {
                    'title': 'Mold Actual Cycle Counts',
                    'width': 600,
                    'height': 500,
                    'chartArea': { left: 10, width: "100%", height: 430, },
                    'pieSliceTextStyle': {
                        color: 'black'
                    },
                    'slices': slices,
                    'pieSliceBorderColor': "Black"
                };

                // Instantiate and draw our chart, passing in some options.
                var chart = new google.visualization.PieChart(document.getElementById('chart_div2'));
                chart.draw(data, options);
    }


    function printDiv() {
        var divContents = document.getElementById("chart_div2").innerHTML;
        var a = window.open('', '', 'height=1000px, width=1000px');
        a.document.write('<html>');
        a.document.write('<body >');
        a.document.write(divContents);
        a.document.write('</body></html>');
        a.document.close();
        a.print();
        a.close();
    }

</script>
@*<img src="@Url.Action("GetData")" />*@

@*<div id="chartContainer" style="height: 370px; width: 100%;"></div>*@

@*<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script>
    window.onload = function () {

    var chart = new CanvasJS.Chart("chartContainer", {
        exportEnabled: true,
        animationEnabled: true,
        theme: "light2",
        title: {
            text: "Recomended Diet"
        },
        legend: {
            cursor: "pointer",
            itemclick: explodePie,
            verticalAlign: "center",
            horizontalAlign: "right"
        },
        data: [{
            type: "pie",
            showInLegend: true,
            toolTipContent: "{name}: <strong>{y}%</strong>",
            startAngle: -45,
            indexLabel: "{name} ({y}%)",
            indexLabelFontColor: "#12122B",
            indexLabelPlacement: "inside",
            indexLabelFontSize: 15,
            dataPoints: @Html.Raw(ViewBag.DataPoints)
        }]
    });
    chart.render();

    function explodePie(e) {
        if (typeof (e.dataSeries.dataPoints[e.dataPointIndex].exploded) === "undefined" || !e.dataSeries.dataPoints[e.dataPointIndex].exploded) {
            e.dataSeries.dataPoints[e.dataPointIndex].exploded = true;
        } else {
            e.dataSeries.dataPoints[e.dataPointIndex].exploded = false;
        }
        e.chart.render();
    }

    }
    </script>*@

<script>
    $(document).ready(function () {
        $('#navAlert').addClass('actives');
        $("#HeaderTop").hide();
    });
</script>